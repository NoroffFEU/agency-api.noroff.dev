// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(uuid())
  email             String        @unique
  title             String?
  firstName         String
  lastName          String
  password          String
  profile           String?
  salt              String?
  about             String?
  avatar            String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  role              UserRole      @default(Applicant)
  skills            String[]      @default([])
  applications      Application[]
  offers            Offer[]
  company           Company?      @relation(fields: [companyId], references: [id])
  companyId         String?
  created           DateTime      @default(now())
  updated           DateTime      @updatedAt
  verified          verified      @default(false)
  verificationToken String        @default(uuid()) @unique
}

enum UserRole {
  Applicant
  Client
  Admin
}

enum verified {
  true
  false
}

model Company {
  id           String        @id @default(uuid())
  name         String        @unique
  admin        User[]
  sector       String?
  logo         String?
  phone        String
  applications Application[]
  offers       Offer[]
  listings     Listing[]
  created      DateTime      @default(now())
  updated      DateTime      @updatedAt
}

model Application {
  id          String   @id @default(uuid())
  applicant   User     @relation(fields: [applicantId], references: [id])
  applicantId String
  company     Company  @relation(fields: [companyId], references: [id])
  companyId   String
  offers      Offer[]
  listing     Listing  @relation(fields: [listingId], references: [id])
  listingId   String
  coverLetter String
  created     DateTime @default(now())
  updated     DateTime @updatedAt
}

model Offer {
  id            String      @id @default(uuid())
  listingId     String
  listing       Listing     @relation(fields: [listingId], references: [id])
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId String
  company       Company     @relation(fields: [companyId], references: [id])
  companyId     String
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  state         OfferState  @default(Pending)
  created       DateTime    @default(now())
  updated       DateTime    @updatedAt
}

enum OfferState {
  Pending
  Accepted
  Rejected
}

model Listing {
  id            String        @id @default(uuid())
  title         String
  tags          String[]
  description   String
  requirements  String[]
  deadline      DateTime
  created       DateTime      @default(now())
  updated       DateTime      @updatedAt
  applications  Application[]
  offer         Offer[]
  company       Company       @relation(fields: [companyId], references: [id])
  companyId     String
  listingsState ListingState  @default(Active)
}

enum ListingState {
  Active
  Ended
}
